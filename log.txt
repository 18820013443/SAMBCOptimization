[08/04/2023 03:57:55 PM INFO]:Files have been read to dataframe
[08/04/2023 03:57:55 PM INFO]:Append ZDER to dfMain
[08/04/2023 03:57:56 PM INFO]:Insert ZOCR to dfMain
[08/04/2023 03:59:58 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/04/2023 03:59:58 PM INFO]:Delete D8
[08/04/2023 03:59:58 PM INFO]:Write VBAK to dfMain
[08/04/2023 03:59:59 PM INFO]:Write VBAP to dfMain
[08/04/2023 03:59:59 PM INFO]:Write LIPS to dfMain
[08/04/2023 03:59:59 PM DEBUG]:Traceback (most recent call last):
  File "/Users/kaitang/Code-Projects/SAMBCOptimization/SAMBCOptimization.py", line 462, in Main
    self.logger('Write Open Allotment to dfMain')
TypeError: 'Logger' object is not callable

[08/04/2023 04:01:12 PM INFO]:Files have been read to dataframe
[08/04/2023 04:01:12 PM INFO]:Append ZDER to dfMain
[08/04/2023 04:01:13 PM INFO]:Insert ZOCR to dfMain
[08/04/2023 04:03:16 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/04/2023 04:03:16 PM INFO]:Delete D8
[08/04/2023 04:03:16 PM INFO]:Write VBAK to dfMain
[08/04/2023 04:03:16 PM INFO]:Write VBAP to dfMain
[08/04/2023 04:03:16 PM INFO]:Write LIPS to dfMain
[08/04/2023 04:03:16 PM INFO]:Write Open Allotment to dfMain
[08/04/2023 04:03:17 PM INFO]:Append ZEER to dfMain
[08/04/2023 04:03:17 PM INFO]:Write Customer List to dfMain
[08/04/2023 04:03:17 PM INFO]:Write Price List to dfMain
[08/04/2023 04:03:17 PM INFO]:Fill in dfMain
[08/04/2023 04:07:27 PM INFO]:Files have been read to dataframe
[08/04/2023 04:07:27 PM INFO]:Append ZDER to dfMain
[08/04/2023 04:07:28 PM INFO]:Insert ZOCR to dfMain
[08/04/2023 04:09:29 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/04/2023 04:09:30 PM INFO]:Delete D8
[08/04/2023 04:09:30 PM INFO]:Write VBAK to dfMain
[08/04/2023 04:09:30 PM INFO]:Write VBAP to dfMain
[08/04/2023 04:09:30 PM INFO]:Write LIPS to dfMain
[08/04/2023 04:09:30 PM INFO]:Write Open Allotment to dfMain
[08/04/2023 04:09:30 PM INFO]:Append ZEER to dfMain
[08/04/2023 04:09:30 PM INFO]:Write Customer List to dfMain
[08/04/2023 04:09:30 PM INFO]:Write Price List to dfMain
[08/04/2023 04:09:30 PM INFO]:Fill in dfMain
[08/04/2023 04:49:52 PM INFO]:Files have been read to dataframe
[08/04/2023 04:49:52 PM INFO]:Append ZDER to dfMain
[08/04/2023 04:49:52 PM INFO]:Insert ZOCR to dfMain
[08/04/2023 04:51:08 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/04/2023 04:51:08 PM INFO]:Delete D8
[08/04/2023 04:51:08 PM INFO]:Write VBAK to dfMain
[08/04/2023 04:51:08 PM INFO]:Write VBAP to dfMain
[08/04/2023 04:51:08 PM INFO]:Write LIPS to dfMain
[08/04/2023 04:51:08 PM INFO]:Write Open Allotment to dfMain
[08/04/2023 04:51:08 PM INFO]:Append ZEER to dfMain
[08/04/2023 04:51:08 PM INFO]:Write Customer List to dfMain
[08/04/2023 04:51:08 PM INFO]:Write Price List to dfMain
[08/04/2023 04:51:08 PM INFO]:Fill in dfMain
[08/04/2023 04:51:08 PM INFO]:Format dfMain
[08/04/2023 04:51:19 PM INFO]:Write report to excel
[08/04/2023 04:58:53 PM INFO]:Files have been read to dataframe
[08/04/2023 04:58:53 PM INFO]:Append ZDER to dfMain
[08/04/2023 04:58:53 PM INFO]:Insert ZOCR to dfMain
[08/04/2023 05:00:09 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/04/2023 05:00:09 PM INFO]:Delete D8
[08/04/2023 05:00:09 PM INFO]:Write VBAK to dfMain
[08/04/2023 05:00:09 PM INFO]:Write VBAP to dfMain
[08/04/2023 05:00:09 PM INFO]:Write LIPS to dfMain
[08/04/2023 05:00:09 PM INFO]:Write Open Allotment to dfMain
[08/04/2023 05:00:09 PM INFO]:Append ZEER to dfMain
[08/04/2023 05:00:09 PM INFO]:Write Customer List to dfMain
[08/04/2023 05:00:09 PM INFO]:Write Price List to dfMain
[08/04/2023 05:00:09 PM INFO]:Fill in dfMain
[08/04/2023 05:00:09 PM INFO]:Format dfMain
[08/04/2023 05:00:19 PM INFO]:Write report to excel
[08/04/2023 05:02:44 PM INFO]:Start
[08/04/2023 05:02:57 PM INFO]:Files have been read to dataframe
[08/04/2023 05:02:57 PM INFO]:Append ZDER to dfMain
[08/04/2023 05:02:58 PM INFO]:Insert ZOCR to dfMain
[08/04/2023 05:04:16 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/04/2023 05:04:16 PM INFO]:Delete D8
[08/04/2023 05:04:16 PM INFO]:Write VBAK to dfMain
[08/04/2023 05:04:16 PM INFO]:Write VBAP to dfMain
[08/04/2023 05:04:16 PM INFO]:Write LIPS to dfMain
[08/04/2023 05:04:16 PM INFO]:Write Open Allotment to dfMain
[08/04/2023 05:04:16 PM INFO]:Append ZEER to dfMain
[08/04/2023 05:04:16 PM INFO]:Write Customer List to dfMain
[08/04/2023 05:04:16 PM INFO]:Write Price List to dfMain
[08/04/2023 05:04:16 PM INFO]:Fill in dfMain
[08/04/2023 05:04:16 PM INFO]:Format dfMain
[08/04/2023 05:04:27 PM INFO]:Write report to excel
[08/04/2023 05:12:02 PM INFO]:Start
[08/04/2023 05:12:15 PM INFO]:Files have been read to dataframe
[08/04/2023 05:12:15 PM INFO]:Append ZDER to dfMain
[08/04/2023 05:12:16 PM INFO]:Insert ZOCR to dfMain
[08/04/2023 05:13:31 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/04/2023 05:13:31 PM INFO]:Delete D8
[08/04/2023 05:13:31 PM INFO]:Write VBAK to dfMain
[08/04/2023 05:13:31 PM INFO]:Write VBAP to dfMain
[08/04/2023 05:13:32 PM INFO]:Write LIPS to dfMain
[08/04/2023 05:13:32 PM INFO]:Write Open Allotment to dfMain
[08/04/2023 05:13:32 PM INFO]:Append ZEER to dfMain
[08/04/2023 05:13:32 PM INFO]:Write Customer List to dfMain
[08/04/2023 05:13:32 PM INFO]:Write Price List to dfMain
[08/04/2023 05:13:32 PM INFO]:Fill in dfMain
[08/04/2023 05:13:32 PM INFO]:Format dfMain
[08/04/2023 05:13:42 PM INFO]:Write report to excel
[08/05/2023 02:21:09 PM INFO]:Start
[08/05/2023 02:21:41 PM INFO]:Files have been read to dataframe
[08/05/2023 02:21:41 PM INFO]:Append ZDER to dfMain
[08/05/2023 02:21:42 PM INFO]:Insert ZOCR to dfMain
[08/05/2023 02:23:49 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/05/2023 02:23:49 PM INFO]:Delete D8
[08/05/2023 02:23:49 PM INFO]:Write VBAK to dfMain
[08/05/2023 02:23:49 PM INFO]:Write VBAP to dfMain
[08/05/2023 02:23:49 PM INFO]:Write LIPS to dfMain
[08/05/2023 02:32:25 PM INFO]:Start
[08/05/2023 02:32:57 PM INFO]:Files have been read to dataframe
[08/05/2023 02:32:57 PM INFO]:Append ZDER to dfMain
[08/05/2023 02:32:58 PM INFO]:Insert ZOCR to dfMain
[08/05/2023 02:35:01 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/05/2023 02:35:01 PM INFO]:Delete D8
[08/05/2023 02:35:01 PM INFO]:Write VBAK to dfMain
[08/05/2023 02:35:01 PM INFO]:Write VBAP to dfMain
[08/05/2023 02:35:01 PM INFO]:Write LIPS to dfMain
[08/05/2023 02:45:20 PM INFO]:Start
[08/05/2023 02:45:52 PM INFO]:Files have been read to dataframe
[08/05/2023 02:45:52 PM INFO]:Append ZDER to dfMain
[08/05/2023 02:45:53 PM INFO]:Insert ZOCR to dfMain
[08/05/2023 02:47:58 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/05/2023 02:47:58 PM INFO]:Delete D8
[08/05/2023 02:47:58 PM INFO]:Write VBAK to dfMain
[08/05/2023 02:47:58 PM INFO]:Write VBAP to dfMain
[08/05/2023 02:47:58 PM INFO]:Write LIPS to dfMain
[08/10/2023 06:08:40 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'GBJ', 'strDocumentDate': '08.08.2023'}
[08/10/2023 06:09:14 PM INFO]:Files have been read to dataframe
[08/10/2023 06:09:14 PM INFO]:Append ZDER to dfMain
[08/10/2023 06:09:15 PM INFO]:Insert ZOCR to dfMain
[08/10/2023 06:09:15 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/10/2023 06:09:15 PM INFO]:Delete D8
[08/10/2023 06:09:15 PM INFO]:Write VBAK to dfMain
[08/10/2023 06:09:15 PM INFO]:Write VBAP to dfMain
[08/10/2023 06:09:15 PM INFO]:Write LIPS to dfMain
[08/10/2023 06:09:15 PM INFO]:Write Open Allotment to dfMain
[08/10/2023 06:09:15 PM INFO]:Append ZEER to dfMain
[08/10/2023 06:09:15 PM INFO]:Write Customer List to dfMain
[08/10/2023 06:09:15 PM INFO]:Write Price List to dfMain
[08/10/2023 06:09:15 PM DEBUG]:Traceback (most recent call last):
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 560, in Main
    self.CombineDataLogic()
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 530, in CombineDataLogic
    self.FillInDfMain()
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 440, in FillInDfMain
    ['砍单原因', '未满足单品补货指引'])
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 60, in UpdateDfMainFromDfOther
    dfMerged = pd.merge(dfMain, dfOther, left_on=leftConditionColumnList, right_on=rightConditionColumnList, how='left', suffixes=('', '_x'))
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 119, in merge
    validate=validate,
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 703, in __init__
    self._maybe_coerce_merge_keys()
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 1256, in _maybe_coerce_merge_keys
    raise ValueError(msg)
ValueError: You are trying to merge on float64 and object columns. If you wish to proceed you should use pd.concat

[08/10/2023 06:12:45 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'GBJ', 'strDocumentDate': '08.08.2023'}
[08/10/2023 06:14:18 PM INFO]:Files have been read to dataframe
[08/10/2023 06:14:18 PM INFO]:Append ZDER to dfMain
[08/10/2023 06:15:02 PM INFO]:Insert ZOCR to dfMain
[08/10/2023 06:15:35 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/10/2023 06:15:35 PM INFO]:Delete D8
[08/10/2023 06:15:37 PM INFO]:Write VBAK to dfMain
[08/10/2023 06:15:38 PM INFO]:Write VBAP to dfMain
[08/10/2023 06:15:42 PM INFO]:Write LIPS to dfMain
[08/10/2023 06:15:42 PM INFO]:Write Open Allotment to dfMain
[08/10/2023 06:15:42 PM INFO]:Append ZEER to dfMain
[08/10/2023 06:15:42 PM INFO]:Write Customer List to dfMain
[08/10/2023 06:15:42 PM INFO]:Write Price List to dfMain
[08/10/2023 06:22:54 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'GBJ', 'strDocumentDate': '08.08.2023'}
[08/10/2023 06:23:28 PM INFO]:Files have been read to dataframe
[08/10/2023 06:23:28 PM INFO]:Append ZDER to dfMain
[08/10/2023 06:23:28 PM INFO]:Insert ZOCR to dfMain
[08/10/2023 06:23:29 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/10/2023 06:23:29 PM INFO]:Delete D8
[08/10/2023 06:23:29 PM INFO]:Write VBAK to dfMain
[08/10/2023 06:23:29 PM INFO]:Write VBAP to dfMain
[08/10/2023 06:23:29 PM INFO]:Write LIPS to dfMain
[08/10/2023 06:23:29 PM INFO]:Write Open Allotment to dfMain
[08/10/2023 06:23:29 PM INFO]:Append ZEER to dfMain
[08/10/2023 06:23:29 PM INFO]:Write Customer List to dfMain
[08/10/2023 06:23:29 PM INFO]:Write Price List to dfMain
[08/10/2023 06:23:29 PM DEBUG]:Traceback (most recent call last):
  File "pandas\_libs\lib.pyx", line 2305, in pandas._libs.lib.maybe_convert_numeric
ValueError: Unable to parse string "nan"

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 564, in Main
    self.CombineDataLogic()
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 534, in CombineDataLogic
    self.FillInDfMain()
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 446, in FillInDfMain
    self.dfMain['下单数量MSU'] = pd.to_numeric(self.dfMain['MSU/sale unit']) * pd.to_numeric(
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\tools\numeric.py", line 184, in to_numeric
    values, set(), coerce_numeric=coerce_numeric
  File "pandas\_libs\lib.pyx", line 2347, in pandas._libs.lib.maybe_convert_numeric
ValueError: Unable to parse string "nan" at position 5114

[08/10/2023 06:28:32 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'GBJ', 'strDocumentDate': '08.08.2023'}
[08/10/2023 06:30:04 PM INFO]:Files have been read to dataframe
[08/10/2023 06:30:04 PM INFO]:Append ZDER to dfMain
[08/10/2023 06:30:07 PM INFO]:Insert ZOCR to dfMain
[08/10/2023 06:30:19 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/10/2023 06:30:19 PM INFO]:Delete D8
[08/10/2023 06:30:19 PM INFO]:Write VBAK to dfMain
[08/10/2023 06:30:20 PM INFO]:Write VBAP to dfMain
[08/10/2023 06:30:20 PM INFO]:Write LIPS to dfMain
[08/10/2023 06:30:20 PM INFO]:Write Open Allotment to dfMain
[08/10/2023 06:30:20 PM INFO]:Append ZEER to dfMain
[08/10/2023 06:30:20 PM INFO]:Write Customer List to dfMain
[08/10/2023 06:30:20 PM INFO]:Write Price List to dfMain
[08/10/2023 06:35:56 PM DEBUG]:Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 564, in Main
    self.CombineDataLogic()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 534, in CombineDataLogic
    self.FillInDfMain()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 444, in FillInDfMain
    ['砍单原因', '未满足单品补货指引'])
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 60, in UpdateDfMainFromDfOther
    dfMerged = pd.merge(dfMain, dfOther, left_on=leftConditionColumnList, right_on=rightConditionColumnList, how='left', suffixes=('', '_x'))
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 119, in merge
    validate=validate,
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 703, in __init__
    self._maybe_coerce_merge_keys()
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 1256, in _maybe_coerce_merge_keys
    raise ValueError(msg)
ValueError: You are trying to merge on float64 and object columns. If you wish to proceed you should use pd.concat

[08/10/2023 06:42:06 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'GBJ', 'strDocumentDate': '08.08.2023'}
[08/10/2023 06:43:43 PM INFO]:Files have been read to dataframe
[08/10/2023 06:43:43 PM INFO]:Append ZDER to dfMain
[08/10/2023 06:43:45 PM INFO]:Insert ZOCR to dfMain
[08/10/2023 06:43:45 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/10/2023 06:43:45 PM INFO]:Delete D8
[08/10/2023 06:43:45 PM INFO]:Write VBAK to dfMain
[08/10/2023 06:43:45 PM INFO]:Write VBAP to dfMain
[08/10/2023 06:43:46 PM INFO]:Write LIPS to dfMain
[08/10/2023 06:43:46 PM INFO]:Write Open Allotment to dfMain
[08/10/2023 06:43:46 PM INFO]:Append ZEER to dfMain
[08/10/2023 06:43:46 PM INFO]:Write Customer List to dfMain
[08/10/2023 06:43:46 PM INFO]:Write Price List to dfMain
[08/10/2023 06:45:12 PM DEBUG]:Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 564, in Main
    self.CombineDataLogic()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 534, in CombineDataLogic
    self.FillInDfMain()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 444, in FillInDfMain
    ['砍单原因', '未满足单品补货指引'])
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 60, in UpdateDfMainFromDfOther
    dfMerged = pd.merge(dfMain, dfOther, left_on=leftConditionColumnList, right_on=rightConditionColumnList, how='left', suffixes=('', '_x'))
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 119, in merge
    validate=validate,
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 703, in __init__
    self._maybe_coerce_merge_keys()
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 1256, in _maybe_coerce_merge_keys
    raise ValueError(msg)
ValueError: You are trying to merge on float64 and object columns. If you wish to proceed you should use pd.concat

[08/10/2023 06:55:12 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'GBJ', 'strDocumentDate': '08.08.2023'}
[08/10/2023 06:56:39 PM INFO]:Files have been read to dataframe
[08/10/2023 06:56:39 PM INFO]:Append ZDER to dfMain
[08/10/2023 06:56:41 PM INFO]:Insert ZOCR to dfMain
[08/10/2023 06:56:41 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/10/2023 06:56:41 PM INFO]:Delete D8
[08/10/2023 06:56:41 PM INFO]:Write VBAK to dfMain
[08/10/2023 06:56:41 PM INFO]:Write VBAP to dfMain
[08/10/2023 06:56:41 PM INFO]:Write LIPS to dfMain
[08/10/2023 06:56:41 PM INFO]:Write Open Allotment to dfMain
[08/10/2023 06:56:41 PM INFO]:Append ZEER to dfMain
[08/10/2023 06:56:42 PM INFO]:Write Customer List to dfMain
[08/10/2023 06:56:42 PM INFO]:Write Price List to dfMain
[08/10/2023 06:56:47 PM DEBUG]:Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 564, in Main
    self.CombineDataLogic()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 534, in CombineDataLogic
    self.FillInDfMain()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 444, in FillInDfMain
    ['砍单原因', '未满足单品补货指引'])
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 60, in UpdateDfMainFromDfOther
    dfMerged = pd.merge(dfMain, dfOther, left_on=leftConditionColumnList, right_on=rightConditionColumnList, how='left', suffixes=('', '_x'))
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 119, in merge
    validate=validate,
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 703, in __init__
    self._maybe_coerce_merge_keys()
  File "C:\Program Files\Python37\lib\site-packages\pandas\core\reshape\merge.py", line 1256, in _maybe_coerce_merge_keys
    raise ValueError(msg)
ValueError: You are trying to merge on float64 and object columns. If you wish to proceed you should use pd.concat

[08/10/2023 06:59:25 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'GBJ', 'strDocumentDate': '08.08.2023'}
[08/10/2023 07:00:49 PM INFO]:Files have been read to dataframe
[08/10/2023 07:00:49 PM INFO]:Append ZDER to dfMain
[08/10/2023 07:00:51 PM INFO]:Insert ZOCR to dfMain
[08/10/2023 07:00:51 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/10/2023 07:00:51 PM INFO]:Delete D8
[08/10/2023 07:00:51 PM INFO]:Write VBAK to dfMain
[08/10/2023 07:00:51 PM INFO]:Write VBAP to dfMain
[08/10/2023 07:00:51 PM INFO]:Write LIPS to dfMain
[08/10/2023 07:00:51 PM INFO]:Write Open Allotment to dfMain
[08/10/2023 07:00:51 PM INFO]:Append ZEER to dfMain
[08/10/2023 07:00:51 PM INFO]:Write Customer List to dfMain
[08/10/2023 07:00:51 PM INFO]:Write Price List to dfMain
[08/10/2023 07:00:51 PM INFO]:Fill in dfMain
[08/10/2023 07:00:52 PM INFO]:Format dfMain
[08/10/2023 07:01:04 PM INFO]:Generate report GBJ Daily SAMBC Report 20230808.xlsx
[08/10/2023 07:01:04 PM INFO]:Total run time is 98s
[08/10/2023 07:23:43 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'GBJ', 'strDocumentDate': '08.08.2023'}
[08/10/2023 07:24:25 PM INFO]:Files have been read to dataframe
[08/10/2023 07:24:25 PM INFO]:Append ZDER to dfMain
[08/10/2023 07:24:25 PM INFO]:Insert ZOCR to dfMain
[08/10/2023 07:26:05 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/10/2023 07:26:06 PM INFO]:Delete D8
[08/10/2023 07:26:06 PM INFO]:Write VBAK to dfMain
[08/10/2023 07:26:06 PM INFO]:Write VBAP to dfMain
[08/10/2023 07:26:06 PM INFO]:Write LIPS to dfMain
[08/10/2023 07:26:06 PM INFO]:Write Open Allotment to dfMain
[08/10/2023 07:26:06 PM INFO]:Append ZEER to dfMain
[08/10/2023 07:26:06 PM INFO]:Write Customer List to dfMain
[08/10/2023 07:26:06 PM INFO]:Write Price List to dfMain
[08/10/2023 07:26:06 PM INFO]:Fill in dfMain
[08/10/2023 07:26:06 PM INFO]:Format dfMain
[08/10/2023 07:26:24 PM INFO]:Generate report GBJ Daily SAMBC Report 20230808.xlsx
[08/10/2023 07:26:24 PM INFO]:Total run time is 160s
[08/14/2023 02:02:28 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 02:05:34 PM INFO]:Files have been read to dataframe
[08/14/2023 02:05:34 PM INFO]:Append ZDER to dfMain
[08/14/2023 02:05:35 PM INFO]:Insert ZOCR to dfMain
[08/14/2023 02:05:39 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/14/2023 02:05:39 PM INFO]:Delete D8
[08/14/2023 02:05:39 PM INFO]:Write VBAK to dfMain
[08/14/2023 02:05:39 PM INFO]:Write VBAP to dfMain
[08/14/2023 02:05:39 PM INFO]:Write LIPS to dfMain
[08/14/2023 02:05:39 PM INFO]:Write Open Allotment to dfMain
[08/14/2023 02:05:39 PM INFO]:Append ZEER to dfMain
[08/14/2023 02:05:39 PM INFO]:Write Customer List to dfMain
[08/14/2023 02:05:39 PM INFO]:Write Price List to dfMain
[08/14/2023 02:05:39 PM INFO]:Fill in dfMain
[08/14/2023 02:09:23 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 02:09:34 PM INFO]:Files have been read to dataframe
[08/14/2023 02:09:34 PM INFO]:Append ZDER to dfMain
[08/14/2023 02:09:34 PM INFO]:Insert ZOCR to dfMain
[08/14/2023 02:09:35 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/14/2023 02:09:35 PM INFO]:Delete D8
[08/14/2023 02:09:35 PM INFO]:Write VBAK to dfMain
[08/14/2023 02:09:35 PM INFO]:Write VBAP to dfMain
[08/14/2023 02:09:35 PM INFO]:Write LIPS to dfMain
[08/14/2023 02:09:35 PM INFO]:Write Open Allotment to dfMain
[08/14/2023 02:09:35 PM INFO]:Append ZEER to dfMain
[08/14/2023 02:09:35 PM INFO]:Write Customer List to dfMain
[08/14/2023 02:09:35 PM INFO]:Write Price List to dfMain
[08/14/2023 02:09:35 PM INFO]:Fill in dfMain
[08/14/2023 02:09:35 PM INFO]:Format dfMain
[08/14/2023 02:09:46 PM INFO]:Generate report W1 Daily SAMBC Report 20230814.xlsx
[08/14/2023 02:09:46 PM INFO]:Total run time is 23s
[08/14/2023 02:13:20 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 02:13:30 PM INFO]:Files have been read to dataframe
[08/14/2023 02:13:31 PM INFO]:Append ZDER to dfMain
[08/14/2023 02:13:31 PM INFO]:Insert ZOCR to dfMain
[08/14/2023 02:13:32 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/14/2023 02:13:32 PM INFO]:Delete D8
[08/14/2023 02:13:32 PM INFO]:Write VBAK to dfMain
[08/14/2023 02:13:32 PM INFO]:Write VBAP to dfMain
[08/14/2023 02:13:32 PM INFO]:Write LIPS to dfMain
[08/14/2023 02:13:32 PM INFO]:Write Open Allotment to dfMain
[08/14/2023 02:13:32 PM INFO]:Append ZEER to dfMain
[08/14/2023 02:13:32 PM INFO]:Write Customer List to dfMain
[08/14/2023 02:13:33 PM INFO]:Write Price List to dfMain
[08/14/2023 02:13:33 PM INFO]:Fill in dfMain
[08/14/2023 02:13:33 PM INFO]:Format dfMain
[08/14/2023 02:13:42 PM INFO]:Generate report W1 Daily SAMBC Report 20230814.xlsx
[08/14/2023 02:13:42 PM INFO]:Total run time is 22s
[08/14/2023 02:19:36 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 02:20:01 PM INFO]:Files have been read to dataframe
[08/14/2023 02:20:01 PM INFO]:Append ZDER to dfMain
[08/14/2023 02:20:01 PM INFO]:Insert ZOCR to dfMain
[08/14/2023 02:20:05 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/14/2023 02:20:05 PM INFO]:Delete D8
[08/14/2023 02:20:05 PM INFO]:Write VBAK to dfMain
[08/14/2023 02:20:05 PM INFO]:Write VBAP to dfMain
[08/14/2023 02:20:05 PM INFO]:Write LIPS to dfMain
[08/14/2023 02:20:06 PM INFO]:Write Open Allotment to dfMain
[08/14/2023 02:20:06 PM INFO]:Append ZEER to dfMain
[08/14/2023 02:20:06 PM INFO]:Write Customer List to dfMain
[08/14/2023 02:20:06 PM INFO]:Write Price List to dfMain
[08/14/2023 02:20:06 PM INFO]:Fill in dfMain
[08/14/2023 02:20:06 PM INFO]:Format dfMain
[08/14/2023 02:21:48 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 02:23:50 PM INFO]:Files have been read to dataframe
[08/14/2023 02:23:50 PM INFO]:Append ZDER to dfMain
[08/14/2023 02:45:37 PM INFO]:Insert ZOCR to dfMain
[08/14/2023 02:48:06 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/14/2023 02:48:44 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 02:48:44 PM DEBUG]:Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 567, in Main
    self.CombineDataLogic()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 501, in CombineDataLogic
    self.ReadFilesToDataFrame()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 64, in ReadFilesToDataFrame
    self.dfZDER = PandasUtils.GetDataFrame(self.mainFolder, 'ZDER.xlsx', 'Sheet1')
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 22, in GetDataFrame
    df = pd.read_excel(filePath, sheet_name=sheetName, engine='openpyxl', dtype='str',parse_dates=parseDatesList, dayfirst=isDayFirst)
  File "C:\Program Files\Python37\lib\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
TypeError: read_excel() got an unexpected keyword argument 'dayfirst'

[08/14/2023 02:55:45 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 02:55:59 PM DEBUG]:Traceback (most recent call last):
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1039, in converter
    date_parser(*date_cols), errors="ignore", cache=cache_dates
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 38, in DateParser
    return datetime.strptime(dateString, '%Y-%m-%d')
TypeError: strptime() argument 1 must be str, not numpy.ndarray

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1050, in converter
    dayfirst=dayfirst,
  File "pandas\_libs\tslibs\parsing.pyx", line 632, in pandas._libs.tslibs.parsing.try_parse_dates
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 38, in DateParser
    return datetime.strptime(dateString, '%Y-%m-%d')
  File "C:\Program Files\Python37\lib\_strptime.py", line 577, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Program Files\Python37\lib\_strptime.py", line 362, in _strptime
    data_string[found.end():])
ValueError: unconverted data remains:  00:00:00

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 567, in Main
    self.CombineDataLogic()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 501, in CombineDataLogic
    self.ReadFilesToDataFrame()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 74, in ReadFilesToDataFrame
    self.dfVBAK = PandasUtils.GetDataFrame(self.mainFolder, 'VBAK.xlsx', 'VBAK', parseDatesList=['ERDAT', 'AUDAT'], isDayFirst=True)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 23, in GetDataFrame
    df = pd.read_excel(filePath, sheet_name=sheetName, engine='openpyxl', dtype='str',parse_dates=parseDatesList, date_parser=PandasUtils.DateParser)
  File "C:\Program Files\Python37\lib\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 395, in read_excel
    mangle_dupe_cols=mangle_dupe_cols,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 1292, in parse
    **kwds,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 627, in parse
    output[asheetname] = parser.read(nrows=nrows)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\readers.py", line 1047, in read
    index, columns, col_dict = self._engine.read(nrows)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\python_parser.py", line 281, in read
    columns, data = self._do_date_conversions(columns, data)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 802, in _do_date_conversions
    keep_date_col=self.keep_date_col,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1093, in _process_date_conversion
    data_dict[colspec] = converter(data_dict[colspec])
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1055, in converter
    return generic_parser(date_parser, *date_cols)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\date_converters.py", line 100, in generic_parser
    results[i] = parse_func(*args)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 38, in DateParser
    return datetime.strptime(dateString, '%Y-%m-%d')
TypeError: strptime() argument 1 must be str, not datetime.datetime

[08/14/2023 02:59:03 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 02:59:11 PM DEBUG]:Traceback (most recent call last):
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1039, in converter
    date_parser(*date_cols), errors="ignore", cache=cache_dates
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(dateString, '%m/%d/%Y')
TypeError: strptime() argument 1 must be str, not numpy.ndarray

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1050, in converter
    dayfirst=dayfirst,
  File "pandas\_libs\tslibs\parsing.pyx", line 632, in pandas._libs.tslibs.parsing.try_parse_dates
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(dateString, '%m/%d/%Y')
  File "C:\Program Files\Python37\lib\_strptime.py", line 577, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Program Files\Python37\lib\_strptime.py", line 359, in _strptime
    (data_string, format))
ValueError: time data '2023-11-08 00:00:00' does not match format '%m/%d/%Y'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 567, in Main
    self.CombineDataLogic()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 501, in CombineDataLogic
    self.ReadFilesToDataFrame()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 74, in ReadFilesToDataFrame
    self.dfVBAK = PandasUtils.GetDataFrame(self.mainFolder, 'VBAK.xlsx', 'VBAK', parseDatesList=['ERDAT', 'AUDAT'], isDayFirst=True)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 22, in GetDataFrame
    df = pd.read_excel(filePath, sheet_name=sheetName, engine='openpyxl', dtype='str',parse_dates=parseDatesList, date_parser=PandasUtils.DateParser)
  File "C:\Program Files\Python37\lib\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 395, in read_excel
    mangle_dupe_cols=mangle_dupe_cols,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 1292, in parse
    **kwds,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 627, in parse
    output[asheetname] = parser.read(nrows=nrows)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\readers.py", line 1047, in read
    index, columns, col_dict = self._engine.read(nrows)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\python_parser.py", line 281, in read
    columns, data = self._do_date_conversions(columns, data)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 802, in _do_date_conversions
    keep_date_col=self.keep_date_col,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1093, in _process_date_conversion
    data_dict[colspec] = converter(data_dict[colspec])
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1055, in converter
    return generic_parser(date_parser, *date_cols)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\date_converters.py", line 100, in generic_parser
    results[i] = parse_func(*args)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(dateString, '%m/%d/%Y')
TypeError: strptime() argument 1 must be str, not datetime.datetime

[08/14/2023 03:00:19 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 03:00:29 PM DEBUG]:Traceback (most recent call last):
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1039, in converter
    date_parser(*date_cols), errors="ignore", cache=cache_dates
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(str(dateString), '%m/%d/%Y')
  File "C:\Program Files\Python37\lib\_strptime.py", line 577, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Program Files\Python37\lib\_strptime.py", line 359, in _strptime
    (data_string, format))
ValueError: time data '[datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)]' does not match format '%m/%d/%Y'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1050, in converter
    dayfirst=dayfirst,
  File "pandas\_libs\tslibs\parsing.pyx", line 632, in pandas._libs.tslibs.parsing.try_parse_dates
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(str(dateString), '%m/%d/%Y')
  File "C:\Program Files\Python37\lib\_strptime.py", line 577, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Program Files\Python37\lib\_strptime.py", line 359, in _strptime
    (data_string, format))
ValueError: time data '2023-11-08 00:00:00' does not match format '%m/%d/%Y'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 567, in Main
    self.CombineDataLogic()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 501, in CombineDataLogic
    self.ReadFilesToDataFrame()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 74, in ReadFilesToDataFrame
    self.dfVBAK = PandasUtils.GetDataFrame(self.mainFolder, 'VBAK.xlsx', 'VBAK', parseDatesList=['ERDAT', 'AUDAT'], isDayFirst=True)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 22, in GetDataFrame
    df = pd.read_excel(filePath, sheet_name=sheetName, engine='openpyxl', dtype='str',parse_dates=parseDatesList, date_parser=PandasUtils.DateParser)
  File "C:\Program Files\Python37\lib\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 395, in read_excel
    mangle_dupe_cols=mangle_dupe_cols,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 1292, in parse
    **kwds,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 627, in parse
    output[asheetname] = parser.read(nrows=nrows)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\readers.py", line 1047, in read
    index, columns, col_dict = self._engine.read(nrows)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\python_parser.py", line 281, in read
    columns, data = self._do_date_conversions(columns, data)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 802, in _do_date_conversions
    keep_date_col=self.keep_date_col,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1093, in _process_date_conversion
    data_dict[colspec] = converter(data_dict[colspec])
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1055, in converter
    return generic_parser(date_parser, *date_cols)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\date_converters.py", line 100, in generic_parser
    results[i] = parse_func(*args)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(str(dateString), '%m/%d/%Y')
  File "C:\Program Files\Python37\lib\_strptime.py", line 577, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Program Files\Python37\lib\_strptime.py", line 359, in _strptime
    (data_string, format))
ValueError: time data '2023-11-08 00:00:00' does not match format '%m/%d/%Y'

[08/14/2023 03:03:22 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 03:03:33 PM DEBUG]:Traceback (most recent call last):
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1039, in converter
    date_parser(*date_cols), errors="ignore", cache=cache_dates
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(str(dateString), '%Y-%d-%m')
  File "C:\Program Files\Python37\lib\_strptime.py", line 577, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Program Files\Python37\lib\_strptime.py", line 359, in _strptime
    (data_string, format))
ValueError: time data '[datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)\n datetime.datetime(2023, 11, 8, 0, 0) datetime.datetime(2023, 11, 8, 0, 0)]' does not match format '%Y-%d-%m'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1050, in converter
    dayfirst=dayfirst,
  File "pandas\_libs\tslibs\parsing.pyx", line 632, in pandas._libs.tslibs.parsing.try_parse_dates
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(str(dateString), '%Y-%d-%m')
  File "C:\Program Files\Python37\lib\_strptime.py", line 577, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Program Files\Python37\lib\_strptime.py", line 362, in _strptime
    data_string[found.end():])
ValueError: unconverted data remains:  00:00:00

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 567, in Main
    self.CombineDataLogic()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 501, in CombineDataLogic
    self.ReadFilesToDataFrame()
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\SAMBCOptimization.py", line 74, in ReadFilesToDataFrame
    self.dfVBAK = PandasUtils.GetDataFrame(self.mainFolder, 'VBAK.xlsx', 'VBAK', parseDatesList=['ERDAT', 'AUDAT'], isDayFirst=True)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 22, in GetDataFrame
    df = pd.read_excel(filePath, sheet_name=sheetName, engine='openpyxl', dtype='str',parse_dates=parseDatesList, date_parser=PandasUtils.DateParser)
  File "C:\Program Files\Python37\lib\site-packages\pandas\util\_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 395, in read_excel
    mangle_dupe_cols=mangle_dupe_cols,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 1292, in parse
    **kwds,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\excel\_base.py", line 627, in parse
    output[asheetname] = parser.read(nrows=nrows)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\readers.py", line 1047, in read
    index, columns, col_dict = self._engine.read(nrows)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\python_parser.py", line 281, in read
    columns, data = self._do_date_conversions(columns, data)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 802, in _do_date_conversions
    keep_date_col=self.keep_date_col,
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1093, in _process_date_conversion
    data_dict[colspec] = converter(data_dict[colspec])
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\parsers\base_parser.py", line 1055, in converter
    return generic_parser(date_parser, *date_cols)
  File "C:\Program Files\Python37\lib\site-packages\pandas\io\date_converters.py", line 100, in generic_parser
    results[i] = parse_func(*args)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\PandasUtils.py", line 37, in DateParser
    return datetime.strptime(str(dateString), '%Y-%d-%m')
  File "C:\Program Files\Python37\lib\_strptime.py", line 577, in _strptime_datetime
    tt, fraction, gmtoff_fraction = _strptime(data_string, format)
  File "C:\Program Files\Python37\lib\_strptime.py", line 362, in _strptime
    data_string[found.end():])
ValueError: unconverted data remains:  00:00:00

[08/14/2023 03:05:26 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 03:06:55 PM INFO]:Files have been read to dataframe
[08/14/2023 03:06:55 PM INFO]:Append ZDER to dfMain
[08/14/2023 03:06:55 PM INFO]:Insert ZOCR to dfMain
[08/14/2023 03:06:59 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/14/2023 03:06:59 PM INFO]:Delete D8
[08/14/2023 03:06:59 PM INFO]:Write VBAK to dfMain
[08/14/2023 03:06:59 PM INFO]:Write VBAP to dfMain
[08/14/2023 03:06:59 PM INFO]:Write LIPS to dfMain
[08/14/2023 03:06:59 PM INFO]:Write Open Allotment to dfMain
[08/14/2023 03:06:59 PM INFO]:Append ZEER to dfMain
[08/14/2023 03:06:59 PM INFO]:Write Customer List to dfMain
[08/14/2023 03:06:59 PM INFO]:Write Price List to dfMain
[08/14/2023 03:06:59 PM INFO]:Fill in dfMain
[08/14/2023 03:06:59 PM INFO]:Format dfMain
[08/14/2023 03:07:25 PM INFO]:Generate report W1 Daily SAMBC Report 20230814.xlsx
[08/14/2023 03:07:25 PM INFO]:Total run time is 119s
[08/14/2023 03:08:56 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 03:09:08 PM INFO]:Files have been read to dataframe
[08/14/2023 03:09:08 PM INFO]:Append ZDER to dfMain
[08/14/2023 03:09:08 PM INFO]:Insert ZOCR to dfMain
[08/14/2023 03:09:09 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/14/2023 03:09:09 PM INFO]:Delete D8
[08/14/2023 03:09:09 PM INFO]:Write VBAK to dfMain
[08/14/2023 03:09:09 PM INFO]:Write VBAP to dfMain
[08/14/2023 03:09:09 PM INFO]:Write LIPS to dfMain
[08/14/2023 03:09:09 PM INFO]:Write Open Allotment to dfMain
[08/14/2023 03:09:09 PM INFO]:Append ZEER to dfMain
[08/14/2023 03:09:09 PM INFO]:Write Customer List to dfMain
[08/14/2023 03:09:09 PM INFO]:Write Price List to dfMain
[08/14/2023 03:09:09 PM INFO]:Fill in dfMain
[08/14/2023 03:09:09 PM INFO]:Format dfMain
[08/14/2023 03:09:20 PM DEBUG]:Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\ExcelUtils.py", line 121, in SaveXlsxWings
    wk.save(newFilePath)
  File "C:\Program Files\Python37\lib\site-packages\xlwings\main.py", line 1065, in save
    self.impl.save(path, password=password)
  File "C:\Program Files\Python37\lib\site-packages\xlwings\_xlwindows.py", line 839, in save
    os.path.realpath(path), FileFormat=file_format, Password=password
  File "C:\Program Files\Python37\lib\site-packages\xlwings\_xlwindows.py", line 104, in __call__
    v = self.__method(*args, **kwargs)
  File "C:\Users\TANGK~1.5\AppData\Local\Temp\gen_py\3.7\00020813-0000-0000-C000-000000000046x0x1x9\_Workbook.py", line 288, in SaveAs
    , Local, WorkIdentity)
pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, 'Microsoft Excel', "Cannot access 'W1 Daily SAMBC Report 20230814.xlsx'.", 'xlmain11.chm', 0, -2146827284), None)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 567, in Main
    self.CombineDataLogic()
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 546, in CombineDataLogic
    strDailyReportName = self.GenerateDailyReport()
  File "c:/Users/tang.k.5/OneDrive - Procter and Gamble/Desktop/Code Projects/SAMBCOptimization/SAMBCOptimization.py", line 497, in GenerateDailyReport
    ExcelUtils(filePath).SaveXlsxWings('Sheet1', strDailyReportName, self.dfMain)
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\ExcelUtils.py", line 127, in SaveXlsxWings
    raise Exception(strE)
Exception: Traceback (most recent call last):
  File "c:\Users\tang.k.5\OneDrive - Procter and Gamble\Desktop\Code Projects\SAMBCOptimization\ExcelUtils.py", line 121, in SaveXlsxWings
    wk.save(newFilePath)
  File "C:\Program Files\Python37\lib\site-packages\xlwings\main.py", line 1065, in save
    self.impl.save(path, password=password)
  File "C:\Program Files\Python37\lib\site-packages\xlwings\_xlwindows.py", line 839, in save
    os.path.realpath(path), FileFormat=file_format, Password=password
  File "C:\Program Files\Python37\lib\site-packages\xlwings\_xlwindows.py", line 104, in __call__
    v = self.__method(*args, **kwargs)
  File "C:\Users\TANGK~1.5\AppData\Local\Temp\gen_py\3.7\00020813-0000-0000-C000-000000000046x0x1x9\_Workbook.py", line 288, in SaveAs
    , Local, WorkIdentity)
pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, 'Microsoft Excel', "Cannot access 'W1 Daily SAMBC Report 20230814.xlsx'.", 'xlmain11.chm', 0, -2146827284), None)


[08/14/2023 03:09:51 PM INFO]:Start with paramaters: {'isJIT': False, 'marketName': 'W1', 'strDocumentDate': '14.08.2023'}
[08/14/2023 03:10:02 PM INFO]:Files have been read to dataframe
[08/14/2023 03:10:02 PM INFO]:Append ZDER to dfMain
[08/14/2023 03:10:02 PM INFO]:Insert ZOCR to dfMain
[08/14/2023 03:10:03 PM INFO]:Write ZCCR Cut Reason to dfMain
[08/14/2023 03:10:03 PM INFO]:Delete D8
[08/14/2023 03:10:04 PM INFO]:Write VBAK to dfMain
[08/14/2023 03:10:04 PM INFO]:Write VBAP to dfMain
[08/14/2023 03:10:04 PM INFO]:Write LIPS to dfMain
[08/14/2023 03:10:04 PM INFO]:Write Open Allotment to dfMain
[08/14/2023 03:10:04 PM INFO]:Append ZEER to dfMain
[08/14/2023 03:10:04 PM INFO]:Write Customer List to dfMain
[08/14/2023 03:10:04 PM INFO]:Write Price List to dfMain
[08/14/2023 03:10:04 PM INFO]:Fill in dfMain
[08/14/2023 03:10:04 PM INFO]:Format dfMain
[08/14/2023 03:10:15 PM INFO]:Generate report W1 Daily SAMBC Report 20230814.xlsx
[08/14/2023 03:10:15 PM INFO]:Total run time is 23s
